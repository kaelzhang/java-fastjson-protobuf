apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.google.protobuf'
// apply plugin: 'org.springframework.boot'
// apply plugin: 'io.spring.dependency-management'

def PROTOC_VERSION = '3.5.1-1'
def PROTOBUF_VERSION = '3.5.1'
def GRPC_VERSION = '1.14.0'

buildscript {
  repositories {
    mavenCentral()
    // maven {
    //   url "https://plugins.gradle.org/m2/"
    // }
  }
  dependencies {
    // classpath "org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE"
    classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.5"
    // Ref: https://plugins.gradle.org/plugin/com.palantir.docker
    // classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1"
  }
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:${PROTOC_VERSION}"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:${GRPC_VERSION}"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}

group = 'ai.ost'

bootJar {
  baseName = 'fastjson-protobuf'
  version =  '1.0.0'
}

repositories {
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  // compile "io.grpc:grpc-netty-shaded:${GRPC_VERSION}"

  // compile "io.grpc:grpc-stub:${GRPC_VERSION}"
  // compile "io.grpc:grpc-alts:${GRPC_VERSION}"

  compile "com.google.protobuf:protobuf-java-util:${PROTOBUF_VERSION}"

  compile "org.springframework.boot:spring-boot-starter-web"
  // compile "org.apache.directory.studio:org.apache.commons.io:2.4"

  // actuator
  // compile "org.springframework.boot:spring-boot-starter-actuator"

  compile "com.alibaba:fastjson:1.2.49"

  // protobuf fileTree("node_modules/@ostai/member-service/app/proto")

  // The built protobuf messages and services
  compile files("build/classes/java/main")

  // tests
  testCompile "io.grpc:grpc-protobuf:${GRPC_VERSION}"
  testCompile "org.springframework.boot:spring-boot-starter-test"
  testCompile "io.grpc:grpc-testing:${GRPC_VERSION}"
}

sourceSets {
  // main {
  //   proto {
  //     // In addition to the default 'src/main/proto'
  //     srcDir "node_modules/@ostai/member-service/app/proto"
  //   }
  // }
  test {
    proto {
      srcDir "src/test/proto"
    }
  }
}

// apply plugin: 'application'

// startScripts.enabled = false

// task apiServer(type: CreateStartScripts) {
//   mainClassName = 'ai.ost.demo.Application'
//   applicationName = 'java-api-server'
//   outputDir = new File(project.buildDir, 'tmp')
//   classpath = jar.outputs.files + project.configurations.runtime
// }

// applicationDistribution.into('bin') {
//   from(apiServer)
//   fileMode = 0755
// }



// apply plugin: 'com.palantir.docker'

// docker {
//   dependsOn build
//   name "${project.group}/${bootJar.baseName}"
//   tags bootJar.version, "latest"
//   files bootJar.archivePath
//   buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
// }
