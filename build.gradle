apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.google.protobuf'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

def PROTOC_VERSION = '3.5.1-1'
def PROTOBUF_VERSION = '3.5.1'
def GRPC_VERSION = '1.14.0'

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE"
    classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.5"
  }
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:${PROTOC_VERSION}"
  }
  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:${GRPC_VERSION}"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {}
    }
  }
}

group = 'ai.ost'

springBoot {
  mainClassName = 'ai.ost.fastjson_protobuf.TestApplication'
}

repositories {
  mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  compile "com.google.protobuf:protobuf-java-util:${PROTOBUF_VERSION}"
  compile "org.apache.directory.studio:org.apache.commons.io:2.4"
  compile 'org.springframework:spring-webmvc:5.0.8.RELEASE'
  compile "com.alibaba:fastjson:1.2.49"

  // tests
  testCompile "org.springframework.boot:spring-boot-starter-web"
  testCompile "io.grpc:grpc-protobuf:${GRPC_VERSION}"
  testCompile "org.springframework.boot:spring-boot-starter-test"
  testCompile "io.grpc:grpc-testing:${GRPC_VERSION}"

  testCompile files("build/classes/java/test/ai/ost/test_vo")
}

sourceSets {
  test {
    proto {
      srcDir "src/test/proto"
    }
  }
}

jacocoTestReport {
  reports {
    xml.enabled = true
    html.enabled = true
  }

  def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
  def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
  def mainSrc = "${project.projectDir}/src/main/java"

  classDirectories = files([debugTree])
  sourceDirectories = files([mainSrc])
}
